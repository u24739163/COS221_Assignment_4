/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package u24739163_northwind_gui;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.io.*;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
// sqlj.runtime.*;
/**
 *
 * @author makha
 */
public class northwind_GUI extends javax.swing.JFrame {

    /**
     * Creates new form northwind_GUI
     */
    public northwind_GUI() {
        initComponents();
        jPopupFrame.hide();
        jPopupFrame.setSize(500, 330);
        jCreateCustomer.setSize(500, 300);
        jUpdateCustomer.setSize(450, 320);
        jDeleteCustomer.setSize(450, 220);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void loadData(String filter) {
        try {
            // TODO code application logic here
            Class.forName("org.mariadb.jdbc.Driver");
            System.out.println("Driver loaded successfully");
                Connection con = DriverManager.getConnection("jdbc:mariadb://localhost:3306/u24739163_northwind", "root", "4659");
                System.out.println("Database connected");
                
                Statement st = con.createStatement();
                String sqlText;
                sqlText = "SELECT e.id, e.first_name, e.last_name, e.address, '' AS address_line_2, e.city, e.country_region, e.zip_postal_code, e.business_phone, e.company, " 
                    + "CASE WHEN EXISTS (" 
                    + "SELECT 1 FROM orders o " 
                    + "WHERE o.employee_id = e.id) " 
                    + "THEN 'Active' " 
                    + "ELSE 'Inactive' " 
                    + "END AS employment_status " 
                    + "FROM employees e " 
                    + "ORDER BY e.id";
                
                // Nests the sql query and filters out the filtered tuples based on the filtered word
                if(filter != null) {
                    sqlText = "SELECT * FROM (" + sqlText + ") e "
                            + "WHERE LOWER(e.first_name) LIKE LOWER(\'" + filter + "%\')";
                }
                System.out.println(sqlText);
                st.execute(sqlText);
                DefaultTableModel model = new DefaultTableModel(new String[]{"ID", "First Name", "Last Name", "Address", "Address Line 2", "City", "Region", "Postal Code", "Phone", "Office", "Active"}, 0);
                jTableEmployees.setModel(model);
                ResultSet rs = st.executeQuery(sqlText);
                String i, f, l, a, a2, c, r, pc, p, o, ac;
                while(rs.next()) {
                    i = rs.getString("e.id");
                    f = rs.getString("e.first_name");
                    l = rs.getString("e.last_name");
                    a = rs.getString("e.address");
                    a2 = rs.getString("address_line_2");
                    c = rs.getString("e.city");
                    r = rs.getString("e.country_region");
                    pc = rs.getString("e.zip_postal_code");
                    p = rs.getString("e.business_phone");
                    o = rs.getString("e.company");
                    ac = rs.getString("employment_status");
                    model.addRow(new Object[]{i, f, l, a, a2, c, r, pc, p, o, ac});
                }
        } catch (ClassNotFoundException ex) {
            System.out.println("ex" + ex);
        } catch (SQLException ex) {
            System.out.println("ex" + ex);
        }
        
    }
    public void addProducts(String pName, double cost, String category, int supplier, boolean discontinued) {
        try {
            // TODO code application logic here
            Class.forName("org.mariadb.jdbc.Driver");
            System.out.println("Driver loaded successfully");
                Connection con = DriverManager.getConnection("jdbc:mariadb://localhost:3306/u24739163_northwind", "root", "4659");
                System.out.println("Database connected");
                
                Statement st = con.createStatement();
                String sqlText;
                sqlText = "INSERT INTO products (supplier_ids, product_name, list_price, discontinued, category) "
                        + "VALUES (" + supplier + ", \"" + pName + "\", " + cost + ", " + discontinued + ", \"" + category + "\");" ;
                System.out.println(sqlText);
                st.execute(sqlText);
        } catch (ClassNotFoundException ex) {
            System.out.println("ex" + ex);
        } catch (SQLException ex) {
            System.out.println("ex" + ex);
        }
        
    }
    public void loadProducts() {
        try {
            // TODO code application logic here
            Class.forName("org.mariadb.jdbc.Driver");
            System.out.println("Driver loaded successfully");
                Connection con = DriverManager.getConnection("jdbc:mariadb://localhost:3306/u24739163_northwind", "root", "4659");
                System.out.println("Database connected");
                
                Statement st = con.createStatement();
                String sqlText;
                sqlText = "SELECT id, supplier_ids, product_name, list_price, discontinued, category FROM products;";
                System.out.println(sqlText);
                st.execute(sqlText);
                DefaultTableModel model = new DefaultTableModel(new String[]{"Supplier id", "id", "Product Name", "Standard Cost", "Category", "Discontinued"}, 0);
                jTableProduct.setModel(model);
                ResultSet rs = st.executeQuery(sqlText);
                String s, i, pn, lp, d, c;
                while(rs.next()) {
                    s = rs.getString("supplier_ids");
                    i = rs.getString("id");
                    pn = rs.getString("product_name");
                    lp = rs.getString("list_price");
                    c = rs.getString("category");
                    d = rs.getString("discontinued");
                    model.addRow(new Object[]{s, i, pn, lp, c, d});
                }
        } catch (ClassNotFoundException ex) {
            System.out.println("ex" + ex);
        } catch (SQLException ex) {
            System.out.println("ex" + ex);
        }
        
    }
    public void loadReport() {
        try {
            // TODO code application logic here
            Class.forName("org.mariadb.jdbc.Driver");
            System.out.println("Driver loaded successfully");
                Connection con = DriverManager.getConnection("jdbc:mariadb://localhost:3306/u24739163_northwind", "root", "4659");
                System.out.println("Database connected");
                
                Statement st = con.createStatement();
                String sqlText;
                sqlText = "SELECT s.company, p.category, COUNT(*) AS 'number of products' "
                        + "FROM products p JOIN suppliers s ON p.supplier_ids = s.id " 
                        + "GROUP BY s.company, p.category;";
                System.out.println(sqlText);
                st.execute(sqlText);
                DefaultTableModel model = new DefaultTableModel(new String[]{"Company", "Category", "Number of Products"}, 0);
                jTableReports.setModel(model);
                ResultSet rs = st.executeQuery(sqlText);
                String c, cat, nop;
                while(rs.next()) {
                    c = rs.getString("s.company");
                    cat = rs.getString("p.category");
                    nop = rs.getString("number of products");
                    model.addRow(new Object[]{c, cat, nop});
                }
        } catch (ClassNotFoundException ex) {
            System.out.println("ex" + ex);
        } catch (SQLException ex) {
            System.out.println("ex" + ex);
        }
        
    }
    public void loadNotifications() {
        try {
            // TODO code application logic here
            Class.forName("org.mariadb.jdbc.Driver");
            System.out.println("Driver loaded successfully");
                Connection con = DriverManager.getConnection("jdbc:mariadb://localhost:3306/u24739163_northwind", "root", "4659");
                System.out.println("Database connected");
                
                Statement st = con.createStatement();
                String sqlText;
                sqlText = "SELECT * FROM customers;";
                System.out.println(sqlText);
                st.execute(sqlText);
                DefaultTableModel model = new DefaultTableModel(new String[]{"id", "Company", "Last Name", "First Name", "Job Title", "Business Phone", "Fax Number", "Address", "City", "State Province", "Zip Code", "Country Region"}, 0);
                jTableNotifications.setModel(model);
                ResultSet rs = st.executeQuery(sqlText);
                String i, c, l, f, jt, bp, fn, a, ct, sp, zc, cr;
                while(rs.next()) {
                    i = rs.getString("id");
                    c = rs.getString("company");
                    l = rs.getString("last_name");
                    f = rs.getString("first_name");
                    jt = rs.getString("job_title");
                    bp = rs.getString("business_phone");
                    fn = rs.getString("fax_number");
                    a = rs.getString("address");
                    ct = rs.getString("city");
                    sp = rs.getString("state_province");
                    zc = rs.getString("zip_postal_code");
                    cr = rs.getString("country_region");
                    model.addRow(new Object[]{i, c, l, f, jt, bp, fn, a, ct, sp, zc, cr});
                }
        } catch (ClassNotFoundException ex) {
            System.out.println("ex" + ex);
        } catch (SQLException ex) {
            System.out.println("ex" + ex);
        }
        
    }
    public void addCustomer(String company, String firstName, String lastName, String jobTitle, String businessPhone, String faxNumber, String address, String city, String stateProvince, String zipCode, String country) {
        try {
            // TODO code application logic here
            Class.forName("org.mariadb.jdbc.Driver");
            System.out.println("Driver loaded successfully");
                Connection con = DriverManager.getConnection("jdbc:mariadb://localhost:3306/u24739163_northwind", "root", "4659");
                System.out.println("Database connected");
                
                Statement st = con.createStatement();
                String sqlText;
                sqlText = "INSERT INTO customers (company, first_name, last_name, job_title, business_phone, fax_number, address, city, state_province, zip_postal_code, country_region) "
                        + "VALUES (\"" + company + "\", \"" + firstName + "\", \"" + lastName + "\", \"" + jobTitle + "\", \"" + businessPhone + "\", \"" + faxNumber + "\", \"" + address + "\", \"" + city + "\", \"" + stateProvince + "\", \"" + zipCode + "\", \"" + country + "\");" ;
                System.out.println(sqlText);
                st.execute(sqlText);
        } catch (ClassNotFoundException ex) {
            System.out.println("ex" + ex);
        } catch (SQLException ex) {
            System.out.println("ex" + ex);
        }
    }
    public void updateCustomer(int id, String company, String firstName, String lastName, String jobTitle, String businessPhone, String faxNumber, String address, String city, String stateProvince, String zipCode, String country) {
        try {
            // TODO code application logic here
            Class.forName("org.mariadb.jdbc.Driver");
            System.out.println("Driver loaded successfully");
            Connection con = DriverManager.getConnection("jdbc:mariadb://localhost:3306/u24739163_northwind", "root", "4659");
            System.out.println("Database connected");
                
        StringBuilder sqlBuilder = new StringBuilder("UPDATE customers SET ");
        List<String> updates = new ArrayList<>();
        
        if (company != null && !company.isEmpty()) {
            updates.add("company = \"" + company + "\"");
        }
        if (firstName != null && !firstName.isEmpty()) {
            updates.add("first_name = \"" + firstName + "\"");
        }
        if (lastName != null && !lastName.isEmpty()) {
            updates.add("last_name = \"" + lastName + "\"");
        }
        if (jobTitle != null && !jobTitle.isEmpty()) {
            updates.add("job_title = \"" + jobTitle + "\"");
        }
        if (businessPhone != null && !businessPhone.isEmpty()) {
            updates.add("business_phone = \"" + businessPhone + "\"");
        }
        if (faxNumber != null && !faxNumber.isEmpty()) {
            updates.add("fax_number = \"" + faxNumber + "\"");
        }
        if (address != null && !address.isEmpty()) {
            updates.add("address = \"" + address + "\"");
        }
        if (city != null && !city.isEmpty()) {
            updates.add("city = \"" + city + "\"");
        }
        if (stateProvince != null && !stateProvince.isEmpty()) {
            updates.add("state_province = \"" + stateProvince + "\"");
        }
        if (zipCode != null && !zipCode.isEmpty()) {
            updates.add("zip_postal_code = \"" + zipCode + "\"");
        }
        if (country != null && !country.isEmpty()) {
            updates.add("country_region = \"" + country + "\"");
        }
        
        if (updates.isEmpty()) {
            return;
        }
        
        sqlBuilder.append(String.join(", ", updates));
        sqlBuilder.append(" WHERE id = ").append(id);
        
        String sqlText = sqlBuilder.toString();
        System.out.println(sqlText);
        
        Statement st = con.createStatement();
        st.execute(sqlText);
        } catch (ClassNotFoundException ex) {
            System.out.println("ex" + ex);
        } catch (SQLException ex) {
            System.out.println("ex" + ex);
        }
    }
    public void deleteCustomer(int id) {
        try {
            Class.forName("org.mariadb.jdbc.Driver");
            System.out.println("Driver loaded successfully");
                Connection con = DriverManager.getConnection("jdbc:mariadb://localhost:3306/u24739163_northwind", "root", "4659");
                System.out.println("Database connected");
                
                Statement st = con.createStatement();
                String sqlText;
                sqlText = "DELETE FROM customers WHERE id = " + id + ";";
                System.out.println(sqlText);
                st.execute(sqlText);
        } catch (ClassNotFoundException ex) {
            System.out.println("ex" + ex);
        } catch (SQLException ex) {
            System.out.println("ex" + ex);
        }
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPopupFrame = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        btnAddProducts = new javax.swing.JButton();
        jCBSupplier = new javax.swing.JComboBox<>();
        jCBCategory = new javax.swing.JComboBox<>();
        jTFProductName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTFStandardCost = new javax.swing.JTextField();
        jRBDiscontinued = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jCreateCustomer = new javax.swing.JFrame();
        txtCompany = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtJob = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtBusiness = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtFax = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtZip = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtCountry = new javax.swing.JTextField();
        btnSubmitCustomer = new javax.swing.JButton();
        jUpdateCustomer = new javax.swing.JFrame();
        txtCountry1 = new javax.swing.JTextField();
        txtFirstName1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtLastName1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtJob1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtBusiness1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtCompany1 = new javax.swing.JTextField();
        txtFax1 = new javax.swing.JTextField();
        btnSubmitCustomer1 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtAddress1 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtCity1 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtState1 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtZip1 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jDeleteCustomer = new javax.swing.JFrame();
        txtDelete = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jTabbedNorthwindGUI = new javax.swing.JTabbedPane();
        jPanelEmployees = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEmployees = new javax.swing.JTable();
        lblFilter = new javax.swing.JLabel();
        txtFilter = new javax.swing.JTextField();
        jPanelProducts = new javax.swing.JPanel();
        btnOpenProductsPopup = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableProduct = new javax.swing.JTable();
        jPanelReports = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableReports = new javax.swing.JTable();
        jPanelNotifications = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableNotifications = new javax.swing.JTable();
        btnAddCustomer = new javax.swing.JButton();
        btnUpdateCustomer = new javax.swing.JButton();
        btnDeleteCustomer = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        btnAddProducts.setText("Add Product");
        btnAddProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductsActionPerformed(evt);
            }
        });

        jCBSupplier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Supplier A", "Supplier B", "Supplier C", "Supplier D", "Supplier E", "Supplier F", "Supplier G", "Supplier H", "Supplier I", "Supplier J" }));

        jCBCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Beverages", "Condiments", "Oil", "Jams, Preserves", "Dried Fruit & Nuts", "Sauces", "Canned Fruit & Vegetables", "Baked Goods & Mixers", "Canned Meat", "Soups", "Candy", "Grains", "Pasta", "Dairy products", "Cereal", "Chips, Snacks" }));

        jLabel1.setText("Product Name");

        jLabel2.setText("List Price");

        jRBDiscontinued.setText("Discontinued");

        jLabel3.setText("Category");

        jLabel4.setText("Supplier");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTFStandardCost, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jTFProductName)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jRBDiscontinued))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jCBCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCBSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(36, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(btnAddProducts)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTFStandardCost, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jRBDiscontinued)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(btnAddProducts)
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout jPopupFrameLayout = new javax.swing.GroupLayout(jPopupFrame.getContentPane());
        jPopupFrame.getContentPane().setLayout(jPopupFrameLayout);
        jPopupFrameLayout.setHorizontalGroup(
            jPopupFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPopupFrameLayout.setVerticalGroup(
            jPopupFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel5.setText("Company");

        jLabel6.setText("First Name");

        jLabel7.setText("Last Name");

        jLabel8.setText("Job Title");

        jLabel9.setText("Business Phone");

        jLabel13.setText("Fax Number");

        jLabel14.setText("Address");

        jLabel15.setText("City");

        jLabel16.setText("State Province");

        jLabel17.setText("Zip Code");

        jLabel18.setText("Country");

        btnSubmitCustomer.setText("Add Customer");
        btnSubmitCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jCreateCustomerLayout = new javax.swing.GroupLayout(jCreateCustomer.getContentPane());
        jCreateCustomer.getContentPane().setLayout(jCreateCustomerLayout);
        jCreateCustomerLayout.setHorizontalGroup(
            jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jCreateCustomerLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                        .addComponent(txtCompany)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(44, 44, 44)
                .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtJob, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtBusiness, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtFax)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtZip, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                        .addComponent(txtCountry)
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnSubmitCustomer))
                .addGap(22, 22, 22))
        );
        jCreateCustomerLayout.setVerticalGroup(
            jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCreateCustomerLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jCreateCustomerLayout.createSequentialGroup()
                        .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jCreateCustomerLayout.createSequentialGroup()
                                .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jCreateCustomerLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jCreateCustomerLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(23, 23, 23)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jCreateCustomerLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBusiness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jCreateCustomerLayout.createSequentialGroup()
                        .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jCreateCustomerLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jCreateCustomerLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jCreateCustomerLayout.createSequentialGroup()
                                .addGroup(jCreateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jCreateCustomerLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jCreateCustomerLayout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(67, 67, 67)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(btnSubmitCustomer)
                .addGap(19, 19, 19))
        );

        jLabel10.setText("First Name");

        jLabel11.setText("Last Name");

        jLabel12.setText("Job Title");

        jLabel19.setText("Business Phone");

        jLabel20.setText("Fax Number");

        btnSubmitCustomer1.setText("Update Customer");
        btnSubmitCustomer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitCustomer1ActionPerformed(evt);
            }
        });

        jLabel21.setText("Company");

        jLabel22.setText("Address");

        jLabel23.setText("City");

        jLabel24.setText("State Province");

        jLabel25.setText("Zip Code");

        jLabel26.setText("Country");

        jLabel27.setText("Customer id");

        javax.swing.GroupLayout jUpdateCustomerLayout = new javax.swing.GroupLayout(jUpdateCustomer.getContentPane());
        jUpdateCustomer.getContentPane().setLayout(jUpdateCustomerLayout);
        jUpdateCustomerLayout.setHorizontalGroup(
            jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jUpdateCustomerLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jUpdateCustomerLayout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jUpdateCustomerLayout.createSequentialGroup()
                        .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtLastName1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtFirstName1)
                                .addComponent(txtCompany1)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jUpdateCustomerLayout.createSequentialGroup()
                                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtJob1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFax1)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jUpdateCustomerLayout.createSequentialGroup()
                                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(txtBusiness1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtState1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24)
                                    .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtAddress1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))))
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtZip1, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(txtCountry1, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jUpdateCustomerLayout.createSequentialGroup()
                        .addComponent(btnSubmitCustomer1)
                        .addContainerGap())))
        );
        jUpdateCustomerLayout.setVerticalGroup(
            jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jUpdateCustomerLayout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jUpdateCustomerLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCompany1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLastName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jUpdateCustomerLayout.createSequentialGroup()
                        .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jUpdateCustomerLayout.createSequentialGroup()
                                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel25))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtJob1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFax1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtZip1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(67, 67, 67))
                            .addGroup(jUpdateCustomerLayout.createSequentialGroup()
                                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel26))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtBusiness1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCountry1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jUpdateCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jUpdateCustomerLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jUpdateCustomerLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtState1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(22, 22, 22)
                .addComponent(btnSubmitCustomer1)
                .addContainerGap())
        );

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel28.setText("Input the ID of the customer you want to delete");

        btnDelete.setText("Delete Customer");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDeleteCustomerLayout = new javax.swing.GroupLayout(jDeleteCustomer.getContentPane());
        jDeleteCustomer.getContentPane().setLayout(jDeleteCustomerLayout);
        jDeleteCustomerLayout.setHorizontalGroup(
            jDeleteCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDeleteCustomerLayout.createSequentialGroup()
                .addGroup(jDeleteCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDeleteCustomerLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE))
                    .addGroup(jDeleteCustomerLayout.createSequentialGroup()
                        .addGroup(jDeleteCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDeleteCustomerLayout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(txtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDeleteCustomerLayout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDeleteCustomerLayout.setVerticalGroup(
            jDeleteCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDeleteCustomerLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel28)
                .addGap(18, 18, 18)
                .addComponent(txtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedNorthwindGUI.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedNorthwindGUIStateChanged(evt);
            }
        });

        jTableEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "First Name", "Last Name", "Address", "Address line 2", "City", "Region", "Postal code", "Phone", "Office", "Active"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEmployees);

        lblFilter.setText("Filter by name: ");

        txtFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEmployeesLayout = new javax.swing.GroupLayout(jPanelEmployees);
        jPanelEmployees.setLayout(jPanelEmployeesLayout);
        jPanelEmployeesLayout.setHorizontalGroup(
            jPanelEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmployeesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(903, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanelEmployeesLayout.setVerticalGroup(
            jPanelEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEmployeesLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanelEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFilter)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedNorthwindGUI.addTab("Employees", jPanelEmployees);

        btnOpenProductsPopup.setText("Add Product");
        btnOpenProductsPopup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOpenProductsPopupMouseClicked(evt);
            }
        });
        btnOpenProductsPopup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenProductsPopupActionPerformed(evt);
            }
        });

        jTableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Supplier id", "id", "Product Name", "Standard Cost", "Category", "Discontinued"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableProduct);

        javax.swing.GroupLayout jPanelProductsLayout = new javax.swing.GroupLayout(jPanelProducts);
        jPanelProducts.setLayout(jPanelProductsLayout);
        jPanelProductsLayout.setHorizontalGroup(
            jPanelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnOpenProductsPopup)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
        );
        jPanelProductsLayout.setVerticalGroup(
            jPanelProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnOpenProductsPopup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
        );

        jTabbedNorthwindGUI.addTab("Products", jPanelProducts);

        jTableReports.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Company", "Category", "Number of products"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableReports);

        javax.swing.GroupLayout jPanelReportsLayout = new javax.swing.GroupLayout(jPanelReports);
        jPanelReports.setLayout(jPanelReportsLayout);
        jPanelReportsLayout.setHorizontalGroup(
            jPanelReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
        );
        jPanelReportsLayout.setVerticalGroup(
            jPanelReportsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelReportsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedNorthwindGUI.addTab("Reports", jPanelReports);

        jTableNotifications.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Company", "Last Name", "First Name", "Job Title", "Business Phone", "Fax Number", "Address", "City", "State Province", "Zip Code", "Country Region"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTableNotifications);

        btnAddCustomer.setText("Add customer");
        btnAddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCustomerActionPerformed(evt);
            }
        });

        btnUpdateCustomer.setText("Update customer");
        btnUpdateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCustomerActionPerformed(evt);
            }
        });

        btnDeleteCustomer.setText("Delete customer");
        btnDeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelNotificationsLayout = new javax.swing.GroupLayout(jPanelNotifications);
        jPanelNotifications.setLayout(jPanelNotificationsLayout);
        jPanelNotificationsLayout.setHorizontalGroup(
            jPanelNotificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNotificationsLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(btnAddCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteCustomer)
                .addContainerGap(703, Short.MAX_VALUE))
            .addComponent(jScrollPane5)
        );
        jPanelNotificationsLayout.setVerticalGroup(
            jPanelNotificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelNotificationsLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanelNotificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCustomer)
                    .addComponent(btnUpdateCustomer)
                    .addComponent(btnDeleteCustomer))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedNorthwindGUI.addTab("Notifications", jPanelNotifications);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedNorthwindGUI)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedNorthwindGUI)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFilterActionPerformed
        // TODO add your handling code here:
        if(txtFilter.getText() != null) {
            loadData(txtFilter.getText());
        }
    }//GEN-LAST:event_txtFilterActionPerformed

    private void btnOpenProductsPopupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenProductsPopupActionPerformed
        // TODO add your handling code here:
        jPopupFrame.show();
        //jPopupMenu1.show(btnAddProductData, btnAddProductData.getX(), btnAddProductData.getY());
    }//GEN-LAST:event_btnOpenProductsPopupActionPerformed

    private void btnOpenProductsPopupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOpenProductsPopupMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnOpenProductsPopupMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnAddProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductsActionPerformed
        // TODO add your handling code here:
        if(jTFProductName.getText().isEmpty() || jTFStandardCost.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please fill out all the fields", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                double cost = Double.parseDouble(jTFStandardCost.getText());
                boolean checked = false;
                if(jRBDiscontinued.isSelected()) {
                    checked = true;
                }
                addProducts(jTFProductName.getText(), cost, jCBCategory.getSelectedItem().toString(), jCBSupplier.getSelectedIndex() + 1, checked);
                loadProducts();
                jPopupFrame.hide();
            } catch (NumberFormatException e) { 
                JOptionPane.showMessageDialog(null, "Data invalid", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }
        
    }//GEN-LAST:event_btnAddProductsActionPerformed

    private void jTabbedNorthwindGUIStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedNorthwindGUIStateChanged
        // TODO add your handling code here:
        if(jTabbedNorthwindGUI.getSelectedIndex() == 2) {
            loadReport();
        }

    }//GEN-LAST:event_jTabbedNorthwindGUIStateChanged

    private void btnSubmitCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitCustomerActionPerformed
        // TODO add your handling code here:
        try {
            if(txtCompany.getText().isEmpty() || txtFirstName.getText().isEmpty() || txtLastName.getText().isEmpty() || txtJob.getText().isEmpty() || txtBusiness.getText().isEmpty() || txtFax.getText().isEmpty() || txtAddress.getText().isEmpty() || txtCity.getText().isEmpty() || txtState.getText().isEmpty() || txtZip.getText().isEmpty() || txtCountry.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please fill out all the fields", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                addCustomer(txtCompany.getText(), txtFirstName.getText(), txtLastName.getText(), txtJob.getText(), txtBusiness.getText(), txtFax.getText(), txtAddress.getText(), txtCity.getText(), txtState.getText(), txtZip.getText(), txtCountry.getText());
                loadNotifications();
                jCreateCustomer.hide();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data invalid", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitCustomerActionPerformed

    private void btnAddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCustomerActionPerformed
        // TODO add your handling code here:
        jCreateCustomer.show();
    }//GEN-LAST:event_btnAddCustomerActionPerformed

    private void btnUpdateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCustomerActionPerformed
        // TODO add your handling code here:
        jUpdateCustomer.show();

    }//GEN-LAST:event_btnUpdateCustomerActionPerformed

    private void btnDeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCustomerActionPerformed
        // TODO add your handling code here:
        jDeleteCustomer.show();
    }//GEN-LAST:event_btnDeleteCustomerActionPerformed

    private void btnSubmitCustomer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitCustomer1ActionPerformed
        // TODO add your handling code here:
        try {
            if(txtId.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please select a customer to update", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
            updateCustomer(Integer.parseInt(txtId.getText()), txtCompany1.getText(), txtFirstName1.getText(), txtLastName1.getText(), txtJob1.getText(), txtBusiness1.getText(), txtFax1.getText(), txtAddress1.getText(), txtCity1.getText(), txtState1.getText(), txtZip1.getText(), txtCountry1.getText());
            loadNotifications();
            jUpdateCustomer.hide();
            } 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data invalid", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSubmitCustomer1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            if(txtDelete.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please select a customer to delete", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                deleteCustomer(Integer.parseInt(txtDelete.getText()));
                loadNotifications();
                jDeleteCustomer.hide();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data invalid", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(northwind_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(northwind_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(northwind_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(northwind_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCustomer;
    private javax.swing.JButton btnAddProducts;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteCustomer;
    private javax.swing.JButton btnOpenProductsPopup;
    private javax.swing.JButton btnSubmitCustomer;
    private javax.swing.JButton btnSubmitCustomer1;
    private javax.swing.JButton btnUpdateCustomer;
    private javax.swing.JComboBox<String> jCBCategory;
    private javax.swing.JComboBox<String> jCBSupplier;
    private javax.swing.JFrame jCreateCustomer;
    private javax.swing.JFrame jDeleteCustomer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelEmployees;
    private javax.swing.JPanel jPanelNotifications;
    private javax.swing.JPanel jPanelProducts;
    private javax.swing.JPanel jPanelReports;
    private javax.swing.JFrame jPopupFrame;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButton jRBDiscontinued;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTFProductName;
    private javax.swing.JTextField jTFStandardCost;
    private javax.swing.JTabbedPane jTabbedNorthwindGUI;
    private javax.swing.JTable jTableEmployees;
    private javax.swing.JTable jTableNotifications;
    private javax.swing.JTable jTableProduct;
    private javax.swing.JTable jTableReports;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JFrame jUpdateCustomer;
    private javax.swing.JLabel lblFilter;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAddress1;
    private javax.swing.JTextField txtBusiness;
    private javax.swing.JTextField txtBusiness1;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCity1;
    private javax.swing.JTextField txtCompany;
    private javax.swing.JTextField txtCompany1;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtCountry1;
    private javax.swing.JTextField txtDelete;
    private javax.swing.JTextField txtFax;
    private javax.swing.JTextField txtFax1;
    private javax.swing.JTextField txtFilter;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtFirstName1;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtJob;
    private javax.swing.JTextField txtJob1;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtLastName1;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtState1;
    private javax.swing.JTextField txtZip;
    private javax.swing.JTextField txtZip1;
    // End of variables declaration//GEN-END:variables
}
